<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
 		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
		
	<!-- 빈 등록 형식 -->	
	<!-- <bean id="tt" class="com.myaws.myapp.service.Test"></bean> -->	 <!-- class를 빈으로 등록함 -->
		
	<!-- 데이터베이스 드라이브 메니져 설치 -->
		<bean id="db" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- "org.springframework.jdbc.datasource.DriverManagerDataSource" 설치할 드라이버 연결 -->	
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/> 
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/aws0822?useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true"></property>
		<property name="username" value="root"/>
		<property name="password" value="1234"/>
		</bean>
		<!-- useSSL=false - 보안인증을 하지 않겠다 | 보통 https를 쓰면 보안이 필요 =>  MySQL JDBC 연결 URL에서 사용하는 설정 -->
		<!-- 데이터베이스와의 연결 시 SSL(보안 소켓 레이어) 암호화를 사용 => 중간에 가로채더라도 평문으로 읽을수 없게됨 // 택배 상자의 상자 -->
		<!-- &amp->특수문자 표시/국제표준시/공개 키(public key)를 검색할 수 있게 설정하는 옵션(MySQL의 보안을 위해 사용하는 인증키) // 비밀편지 공개 열쇠-->
		<!--
		useSSL: 데이터 전송 시 SSL 암호화를 사용할지 여부를 결정 ->> 전송시 평문으로 못 읽게 암호화
		allowPublicKeyRetrieval: 클라이언트가 MySQL 서버의 공개 키를 검색할 수 있도록 허용합니다. ->> MySQL 접근을 위한 만드는 열쇠
		-->
		
	<!-- mybatis 사용 -->
	<!-- 콩 공장을 연결해놓음/쿼리를 만드는 공장과 같은 곳 -->
	<!-- 쿼리를 만들 때 프리페리언스 구문을 대신해줌 코드가 15줄에서 2줄로 바꿈-->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 맴버변수에 레퍼런스로 해당되는 jdbc를 연결해놓음 -->
			<property name="dataSource" ref="db"></property>
			<!-- 쿼리 저장할 곳 -->
			<!-- xml만 설정하고 mapper로 설정되어 있지 않아 오류가 뜸 -->
			<!-- 밑에 있는 쿼리들을 활용 -->
			<property name="mapperLocations" value="classpath:mappers/*.xml" ></property>
			<!-- myBatis 환경 설정 -->
			<!-- myBatis 설정에 따라 구동이 됨-->
			<property name="configLocation" value="classpath:config/mybatis_config.xml"></property>
		</bean>
		
	<!-- 공장에서 만들어 짓 것을 SqlSessionTemplate클래스에서 이게 mybatis 객체가 됨-->
	<!-- mybatis를 부를 때 sqlSession를 부르지만 사실은 그 안에는 SqlSessionFactoryBean가 담겨있음 -->
	<!-- 쿼리를 보내는 대리점 같은 곳 / 위 쿼리와 연동 / 쿼리를 실질적으로 사용 / sqlSessionFactory와 연동되어 잇음-->
	<!-- sqlSessionFactory 사용하고 싶을 때는 sqlSession 사용-->
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
			<!-- 생성자-매개변수 -->
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
		</bean>
		
	<!-- 컨트롤러를 제외한 모든 것은 root를 통하게 하는 설정 -->
	<!-- exclude: 제외 -->
		<context:component-scan base-package="com.myaws.myapp">
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>
		

</beans>
